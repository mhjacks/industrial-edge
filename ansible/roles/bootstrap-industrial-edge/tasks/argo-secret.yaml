---
# tasks file for argo-secret
- name: "[argo-secret] wait for {{ argo_target_namespace }} namespace to be created"
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ argo_target_namespace }}"
    wait: yes
    wait_sleep: 5
    wait_timeout: 120

# passwd_resource="secrets/${COMPONENT}-gitops-cluster"
# src_ns="${PATTERN}-${COMPONENT}"
# Check that the ArgoCD admin password exists
- name: "[argo-secret] Checking for secrets/{{ component }}-gitops-cluster to be populated in {{ pattern }}-{{ component }}"
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Secret
    name: "{{ component }}-gitops-cluster"
    namespace: "{{ pattern }}-{{ component }}" 
    wait: yes
    wait_sleep: 5
    wait_timeout: 120
  register: response
  failed_when: response.failed == 'true'

- name:  "[argo-secret] ArgoCD secret response in {{ pattern }}-{{ component }}"
  debug:
    var: response
  when: debug | bool
  
- name: "[argo-secret] Setting secret facts"
  set_fact:
    argo_user: "admin"
    argo_password: "{{ response['result']['data']['admin.password'] }}"

- name: "[argo-secret] Creating Argo secret in {{ argo_target_namespace }}"
  k8s:
    definition:
      apiVersion: v1
      kind: Secret

      metadata:
        name: argocd-env
        namespace: "{{ argo_target_namespace }}"
      type: Opaque
      data:
        ARGOCD_USERNAME: "{{ argo_user | b64encode }}"
        ARGOCD_PASSWORD: "{{ argo_password | b64encode }}"
      state: present
  
- name:  "[argo-secret] Conditions met, managing secret argo-env in {{ pattern }}-{{ component }}"
  debug:
    msg: "ok"
